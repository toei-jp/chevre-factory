import ActionStatusType from './actionStatusType';
import ActionType from './actionType';
import { IExtendId } from './autoGenerated';

/**
 * アクションへの関係者インターフェース
 * 関係者を表現する最低限のインターフェース
 * 継承先にて、インターフェースが強化される可能性あり
 */
export interface IParticipant {
    typeOf: string;
    id?: string;
    name?: string;
}
/**
 * アクション目的インターフェース
 */
export interface IPurpose {
    typeOf: string;
}
/**
 * アクション属性
 */
export interface IAttributes<TObject, TResult> {
    /**
     * アクションタイプ
     */
    typeOf: ActionType;
    /**
     * アクション説明
     */
    description?: string;
    /**
     * アクション主体者
     */
    agent: IParticipant;
    /**
     * アクション受取者
     */
    recipient?: IParticipant;
    /**
     * アクション結果
     */
    result?: TResult;
    /**
     * アクション失敗時のエラー結果
     */
    error?: any;
    /**
     * アクション対象
     */
    object: TObject;
    /**
     * 目的
     */
    purpose?: IPurpose;
    /**
     * 事後に発生するアクション
     */
    potentialActions?: any;
}
/**
 * アクション動的属性インターフェース
 * リポジトリーに保管時にセット、あるいは変更される
 */
export interface IDynamicAttributes {
    /**
     * アクション状態
     */
    actionStatus: ActionStatusType;
    /**
     * 開始日時
     */
    startDate: Date;
    /**
     * 終了日時
     */
    endDate?: Date;
}
/**
 * 抽象アクションインターフェース
 */
export type IAction<TAttributes extends IAttributes<any, any>> = IExtendId<TAttributes & IDynamicAttributes>;
